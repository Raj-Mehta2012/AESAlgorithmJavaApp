/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nsassignment;

import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Base64;
import java.util.HashMap;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;

/**
 *
 * @author Imperfect
 */
public class NoteAccess extends javax.swing.JFrame {

    /**
     * Creates new form NoteAccess
     */
    public NoteAccess() {
        initComponents();
        getConnection();
    }
    
    private void getConnection(){
          try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection cn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/my_db?serverTimezone=UTC","root","");
             String query1 = "select * from aesalgo" ;
             PreparedStatement pst = (PreparedStatement) cn.prepareStatement(query1);
             ResultSet rs = pst.executeQuery();
             while (rs.next()) {
                String b;
                b=rs.getString("title");
               
                TitleAccessUI.addItem(b);
             }
        }
        catch(Exception e){
            e.printStackTrace();
        } 
    }
    
    public SecretKeySpec generateSecretkeySpec(String password, String salt) throws NoSuchAlgorithmException, InvalidKeySpecException
    {
        byte[] sb = Base64.getDecoder().decode(salt);
        final PBEKeySpec key = new PBEKeySpec(password.toCharArray(), sb, 12000, 256);
        final SecretKeyFactory skf = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA1");

        final byte[] kb = skf.generateSecret(key).getEncoded();
        return new SecretKeySpec(kb, "AES");
    }
    //@RequiresApi(api = Build.VERSION_CODES.O)
    public IvParameterSpec generateIvSpec(String iv)
    {
        byte[] i = Base64.getDecoder().decode(iv.getBytes());
        return new IvParameterSpec(i);
    }

    public String decryt(HashMap<String,String> map) throws NoSuchAlgorithmException, InvalidKeySpecException, NoSuchPaddingException, InvalidKeyException, InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException
    {
        final String password = map.get("password");
        final String salt = map.get("salt");
        final String iv = map.get("iv");
        SecretKeySpec keySpec = generateSecretkeySpec(password, salt);
        IvParameterSpec ivSpec = generateIvSpec(iv);
        final Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
        cipher.init(Cipher.DECRYPT_MODE, keySpec, ivSpec);
        byte[] msg = Base64.getDecoder().decode(map.get("message").getBytes());
        final String message = new String(cipher.doFinal(msg));
        return message;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        PasswordUI = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        DMessageUI = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        TitleAccessUI = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));

        PasswordUI.setText("Enter Password...");
        PasswordUI.setToolTipText("");
        PasswordUI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordUIActionPerformed(evt);
            }
        });

        DMessageUI.setColumns(20);
        DMessageUI.setRows(5);
        DMessageUI.setText("Your Message is...");
        jScrollPane1.setViewportView(DMessageUI);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(231, 76, 60));
        jLabel1.setText("ACCESS NOTE");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        TitleAccessUI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        TitleAccessUI.setToolTipText("");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setText("ACCESS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 117, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PasswordUI)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                            .addComponent(TitleAccessUI, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addComponent(TitleAccessUI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(PasswordUI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jMenu1.setText("ADD NOTE");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("ACCESS NOTE");
        jMenu2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        NoteAccess obj=new NoteAccess();
        
        String a= (String)TitleAccessUI.getSelectedItem();
        String b=PasswordUI.getText();
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection cn =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/my_db?serverTimezone=UTC","root","");
            System.out.println(cn);
            String query1 ="select * from aesalgo where title=?";
            PreparedStatement pst = (PreparedStatement) cn.prepareStatement(query1);
            pst.setString(1,a);
            ResultSet rs = pst.executeQuery();
            rs.next();
         
                HashMap<String,String> map=new HashMap<String,String>();
                map.put("iv",rs.getString("iv"));
                map.put("salt",rs.getString("salt"));
                map.put("message",rs.getString("etext"));
                map.put("password",b);
                try{
                DMessageUI.setText(obj.decryt(map));
                }
                catch(Exception e){
                 JOptionPane.showMessageDialog(null,"Password error");
                }
         
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void PasswordUIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordUIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordUIActionPerformed
    
    private void jButton1ActionPerfomed(java.awt.event.ActionEvent evt){
    
        NoteAccess obj=new NoteAccess();
        
        String a= (String)TitleAccessUI.getSelectedItem();
        String b=PasswordUI.getText();
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection cn =(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/my_db?serverTimezone=UTC","root","");
            System.out.println(cn);
            String query1 ="select * from aesalgo where title=?";
            PreparedStatement pst = (PreparedStatement) cn.prepareStatement(query1);
            pst.setString(1,a);
            ResultSet rs = pst.executeQuery();
            rs.next();
                HashMap<String,String> map=new HashMap<String,String>();
                map.put("iv",rs.getString("iv"));
                map.put("salt",rs.getString("salt"));
                map.put("message",rs.getString("etext"));
                map.put("password",b);
                try{
                DMessageUI.setText(obj.decryt(map));
                }
                catch(Exception e){
                    DMessageUI.setText("dkjfhseufuhe.fkdnczxckneufheofh.nfhukhkg.ig");
                    JOptionPane.showMessageDialog(null,"Password error");
                }  
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NoteAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NoteAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NoteAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NoteAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NoteAccess().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea DMessageUI;
    private javax.swing.JTextField PasswordUI;
    private javax.swing.JComboBox<String> TitleAccessUI;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
